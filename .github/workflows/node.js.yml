# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: macos-14
    strategy:
      matrix:
        node-version: ['20']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    
    - name: Create temporary directory
      run: mkdir -p /tmp/chrome_install
      
    - name: Download Custom Chromium
      run: |
          curl -o /tmp/chrome_install/chromium.dmg https://distpartners-minio-1.uplink.eyeo.it/eyeo-browser-ad-filtering-releases/Chromium-126.0.6465.0.dmg
          
    - name: Mount Custom Chromium
      id: mount_dmg
      run: |
        MOUNT_OUTPUT=$(hdiutil attach /tmp/chrome_install/chromium.dmg -nobrowse)
        echo "$MOUNT_OUTPUT"
        MOUNT_POINT=$(echo "$MOUNT_OUTPUT" | grep -Eo '/Volumes/[^ ]+')
        echo "::set-output name=mount_point::$MOUNT_POINT"
        
    - name: Copy Chromium to Applications
      run: |
        MOUNT_POINT=${{ steps.mount_dmg.outputs.mount_point }}
        cp -R "$MOUNT_POINT/Chromium.app" /Applications/

    - name: Run CodeceptJS tests
      env: 
        CHROME_BIN: /Applications/Chromium.app/Contents/MacOS/Chromium
      run: |
        npx codeceptjs run -o '{"helpers": {"Playwright": {"chromium": {"executablePath": "${{env.CHROME_BIN}}" }}}}'
